* {
  outline: none;
}

@include media-breakpoint-up(lg) {
  @include scrollBar;
}

html,
body {
  min-height: 100vh;
}

html {
  width: 100vw;
}

body {
  color: $font-color-base;
  position: relative;
  display: flex;
  flex-direction: column;
  overflow-x: hidden;
  background-color: $light;
  height: 100%;
  max-height: 100%;
  &.overflow {
    overflow: hidden;
  }
}

main {
  flex-grow: 1;
}

.footer {
  margin-top: auto;
}

button {
  border: none;
  background-color: transparent;
  &:focus, &:hover {
    outline: none !important;
  }
}

figure {
  margin-bottom: 0;
}

input[type="number"] {
  -moz-appearance: textfield;
  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
}

input,
textarea {
  &:focus {
    outline: none;
  }
}

textarea {
  resize: none;
}

svg {
  max-width: 100%;
  pointer-events: none;
}

::selection {
  background: rgba($primary, 0.8);
  color: #fff;
}

#bx-panel.bx-panel-fixed {
  width: 100vw !important;
}

.clearfix {
  &::after {
    display: table;
    content: '';
    clear: both;
  }
}

.link-wrapper {
  display: block;
  text-decoration: none;
  &:hover {
    color: inherit;
    text-decoration: none;
  }
}

.spacer {
  flex-grow: 1
}

.scroll-wrapper {
  @include media-breakpoint-down(lg) {
    overflow-x: auto;
    overflow-y: hidden;
    &__item {
      overflow-y: hidden;
      padding-bottom: 20px;
      margin-bottom: -20px;
    }
  }
}

.ripple {
  position: relative;
  overflow: hidden;
  &:before {
    content: '';
    position: absolute;
    display: block;
    background: var(--ripple-background, gray);
    border-radius: 50%;
    pointer-events: none;
    //  position and size
    top: calc(var(--y) * 1px);
    left: calc(var(--x) * 1px);
    width: calc(var(--d) * 1px);
    height: calc(var(--d) * 1px);
    //  animated properties
    opacity: calc(var(--o, 1) * var(--ripple-opacity, 0.25));
    transition: calc(var(--t, 0) * var(--ripple-duration, 500ms)) var(--ripple-easing, linear);
    transform: translate(-50%, -50%) scale(var(--s, 1));
    transform-origin: center;
  }
}

.lazyloaded {
  opacity: 0;
  background-color: #f7f7f7;
  transition: opacity 600ms;
}

.lazyloaded {
  opacity: 1;
}

@import "../components/start";
